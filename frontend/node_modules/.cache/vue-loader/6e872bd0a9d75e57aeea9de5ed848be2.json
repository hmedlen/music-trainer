{"remainingRequest":"/Users/huntermedlen/Work/WebApps/music-trainer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huntermedlen/Work/WebApps/music-trainer/src/components/Pitch/PitchCard.vue?vue&type=style&index=0&id=3258ebc1&scoped=true&lang=css&","dependencies":[{"path":"/Users/huntermedlen/Work/WebApps/music-trainer/src/components/Pitch/PitchCard.vue","mtime":1590786617598},{"path":"/Users/huntermedlen/Work/WebApps/music-trainer/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huntermedlen/Work/WebApps/music-trainer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huntermedlen/Work/WebApps/music-trainer/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huntermedlen/Work/WebApps/music-trainer/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/huntermedlen/Work/WebApps/music-trainer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huntermedlen/Work/WebApps/music-trainer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdhbWUtY2FyZCB7CiAgaGVpZ2h0OiA1MDBweDsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgcGFkZGluZy1ib3R0b206IDUwcHg7Cn0KCi5jYXJkLWFjdGlvbnMgewogIC8qIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDA7ICovCn0KCi5sYXN0LW5vdGUgewogIGZvbnQtc2l6ZTogMzBweDsKICBmb250LXdlaWdodDogNzAwOwp9Cg=="},{"version":3,"sources":["PitchCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PitchCard.vue","sourceRoot":"src/components/Pitch","sourcesContent":["<template>\n  <v-card class=\"game-card d-flex flex-column\">\n    <v-card-title>\n      <v-spacer class=\"last-note\">\n        \n      </v-spacer>\n    </v-card-title>\n\n    <div>\n      <v-btn\n        large\n        dark\n        @click=\"playSound\"\n      >\n        <v-icon>mdi-volume-high</v-icon>\n      </v-btn>\n    </div>\n\n    <v-row>\n      <v-spacer />\n\n      <v-col cols=\"4\">\n        <v-card flat dense :class=\"colorIncorrect\" style=\"min-height:150px; margin-top:10px; padding-top:32px; font-size:60px; font-weight:400\">\n          {{ incorrect }}\n        </v-card>\n      </v-col>\n     \n      <v-spacer />\n\n      <v-col cols=\"4\">\n        <v-card flat dense :class=\"colorCorrect\" style=\"min-height:150px; margin-top:10px; padding-top:32px; font-size:60px; font-weight:400\">\n          {{ correct }}\n        </v-card>\n      </v-col>\n\n      <v-spacer />\n    </v-row>\n\n    <v-row>\n      <v-col cols=\"12\">\n        <span class=\"last-note\">\n            {{ feedback }} {{ lastNote }} {{ lastOctave }}\n        </span>\n        <!-- <v-spacer />\n        <span>\n          You said: {{ userAnswer }}\n        </span> -->\n      </v-col>\n    </v-row>\n\n    <!-- <v-toolbar flat dense :class=\"colorCorrect\" dark>\n      <v-spacer />\n      <v-toolbar-title>{{ correct }}</v-toolbar-title>\n      <v-spacer />\n    </v-toolbar>\n\n    <v-toolbar flat dense :class=\"colorIncorrect\" dark>\n      <v-spacer />\n      <v-toolbar-title>{{ incorrect }}</v-toolbar-title>\n      <v-spacer />\n    </v-toolbar> -->\n\n    <v-card-actions class=\"card-actions\">\n      <v-spacer />\n      <v-btn\n        id=\"noteBtnOther\"\n        light\n        x-large\n        class=\"secondary\"\n        @click=\"clickNo\"\n        v-on:keyup.37=\"onClick\">\n        OTHER\n      </v-btn>\n      <v-spacer />\n      <v-btn\n        id=\"noteBtnC\"\n        dark\n        x-large\n        class=\"primary\"\n        @click=\"clickYes('0')\" >\n        <!-- v-on:keyup.39=\"onClick\"> -->\n        C\n      </v-btn>\n      <v-spacer />\n      <v-btn\n        id=\"noteBtnG\"\n        dark\n        x-large\n        class=\"primary\"\n        @click=\"clickYes('7')\" >\n        <!-- v-on:keyup.39=\"onClick\"> -->\n        G\n      </v-btn>\n      <v-spacer />\n    </v-card-actions>\n    You said: <span id=\"userAnswer\" />\n  </v-card>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      rando: 0,\n      octave: 3,\n      correct: 0,\n      incorrect: 0,\n      lastNote: \" \",\n      lastOctave: \"\",\n      colorCorrect: \"green\",\n      colorIncorrect: \"red\",\n      feedback: \"\",\n    }\n  },\n  props: [\n    'note'\n  ],\n  methods: {\n    clickNo () {\n      this.feedback = \"Correct Answer:\";\n      // this.yourAnswer = noteArray[varNote];\n\n      if (this.rando != '0' && this.rando != '7') {\n        // this.correct += 1;\n        // this.colorCorrect = \"green\";\n        // this.colorIncorrect = \"white\";\n      } else {\n        this.incorrect += 1;\n        // this.colorIncorrect = \"red\";\n        // this.colorCorrect = \"white\";\n      }\n\n      this.lastNote = noteArray[this.rando];\n      this.lastOctave = this.octave;\n\n      var threshhold1 = 35;\n      var randomNumber = Math.random() * 100;\n      if (randomNumber < threshhold1) {\n        this.rando = 0;\n      }\n      else {\n        this.rando = (Math.ceil(Math.random() * 12)) % 12;\n      }\n\n      this.octave = randomInteger(2,3);\n\n      setTimeout(() => { this.lastNote = \" \"; this.lastOctave = \" \"; this.feedback = \" \"; }, 1200);\n      setTimeout(() => { this.playSound(); }, 1300);\n    },\n    clickYes (varNote) {\n      this.feedback = \"Correct Answer:\";\n      // this.yourAnswer = noteArray[varNote];\n\n      if (this.rando == varNote) {\n        this.correct += 1;\n        playCorrectAnswer();\n      } else {\n        this.incorrect += 1;\n      }\n\n      this.lastNote = noteArray[this.rando];\n      this.lastOctave = this.octave;\n\n      var threshhold1 = 25;\n      var threshhold2 = 75;\n      var randomNumber = Math.random() * 100;\n      if (randomNumber < threshhold1) {\n        this.rando = 0;\n      } else if (randomNumber > threshhold2) {\n        this.rando = 7;\n      } else {\n        this.rando = (Math.ceil(Math.random() * 12)) % 12;\n      }\n\n      this.octave = randomInteger(2,3);\n\n      setTimeout(() => { this.lastNote = \" \"; this.lastOctave = \" \"; this.feedback = \" \"; }, 1200);\n      setTimeout(() => { this.playSound(); }, 1300);\n    },\n    playSound () {\n      let noteToPlay = noteArray2[this.rando];\n      playAudioFile(this.octave, noteToPlay);\n    }\n  },\n  mounted () {\n    let vm = this;\n\n    // vm.$nextTick(function () {      \n    //   playAudioFile(vm.note)\n    // });\n  } \n}\n</script>\n\n<style scoped>\n.game-card {\n  height: 500px;\n  position: relative;\n  padding-bottom: 50px;\n}\n\n.card-actions {\n  /* position: absolute;\n  bottom: 0; */\n}\n\n.last-note {\n  font-size: 30px;\n  font-weight: 700;\n}\n</style>"]}]}