{"remainingRequest":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huntermedlen/Programming/music-trainer/frontend/src/components/Exercises/PitchTraining.vue?vue&type=style&index=0&id=3c9a91a6&scoped=true&lang=css&","dependencies":[{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/src/components/Exercises/PitchTraining.vue","mtime":1591040245802},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNjb3JlIHsKICBwYWRkaW5nLXRvcDogNDBweDsKICBmb250LXNpemU6IDMwcHg7Cn0KCi5hbnN3ZXJDaG9pY2VzIHsKICBwYWRkaW5nLXRvcDogMzBweDsKfQoKLmFuc3dlckJ0bnMgewogIG1hcmdpbjogMnB4Owp9CgoKCg=="},{"version":3,"sources":["PitchTraining.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"PitchTraining.vue","sourceRoot":"src/components/Exercises","sourcesContent":["<template>\n  <div>\n      <div class=\"score\">\n        {{ correct }} / {{ total }}\n      </div>\n      <div>\n        {{ correctRatio }}%\n      </div>\n\n      <div style=\"marginTop:60px\" />\n      <v-btn\n        large\n        dark\n        @click=\"playSound\"\n      >\n        <v-icon>mdi-volume-high</v-icon>\n      </v-btn>\n\n      <div class=\"answerChoices\">\n        <v-btn fab text class=\"answerBtns\" v-for=\"item in activeChoices\" :id=\"item\" :key=\"item\" @click=\"onAnswerClick(item)\">\n          {{ item | fixSharps }}\n        </v-btn>\n      </div>\n  </div>\n</template>\n\n<script>\nimport Piano from '../globals/Piano'\n\nexport default {\n  components: {\n    Piano\n  },\n  data () {\n    return {\n      sound: 'SynthBrass',\n      note: 0,\n      noteBig: 0,\n      octave: 3,\n      activeChoices: [],\n      flag: false,\n      correct: 0,\n      total: 0,\n      correctRatio: 0\n    }\n  },\n  methods: {\n    onAnswerClick (answer) {\n      this.total += 1;\n      var answerConverted = noteArray2.indexOf(answer);\n      var isCorrect = processAnswer(answerConverted);\n\n      if (isCorrect) {\n        this.correct += 1;\n        untilFlag = false;\n        playCorrectAnswer();\n        $(\"#\" + answer).addClass(\"correct\");\n\n        this.noteBig = convertToBigInt(answer, this.octave);\n        $('#pkey-' + this.noteBig).addClass(\"correct\");\n        // $('#pkey-' + this.noteBig).css(\"background\", \"#7cfc00\");\n        \n        this.nextStep();\n      } else {\n        $(\"#\" + answer).addClass(\"incorrect\");\n      }\n\n      this.correctRatio = ((this.correct / this.total) * 100).toFixed(1)\n      // var discount = (price / listprice).toFixed(2);\n    },\n\n    nextStep () {\n      for (var item in this.activeChoices) {\n        $(\"#\" + this.activeChoices[item]).prop(\"disabled\", true);\n      }\n\n      let randomItem = getRandomItem(activeOptions);\n      let randomOctave = getRandomItem([3]);\n      setTimeout(() => { this.note = randomItem; correctAnswer = randomItem; this.octave = randomOctave; this.flag = !this.flag}, 1400);\n      // setTimeout(()=> { this.resetChoices(); }, 1400);\n      setTimeout(() => { this.playSound(); this.resetChoices(); }, 1500);\n\n      // console.log(\"??\");\n      // setInterval(this.playSound(), 100);\n      // setTimeout(() => { playAudioFile2(this.octave, this.note, this.sound, this.flag); this.resetChoices(); }, 1000);\n      // TODO: change parameter of playAudioFile to an object, where it resolves the current step yknow?\n    },\n\n    resetChoices() {\n      $('#pkey-' + this.noteBig).removeClass(\"correct\");\n      // $('#pkey-' + this.noteBig).css(\"background\", \"transparent\");\n      for (var item in this.activeChoices) {\n        if ($(\"#\" + this.activeChoices[item]).hasClass(\"correct\")) $(\"#\" + this.activeChoices[item]).removeClass(\"correct\");\n        if ($(\"#\" + this.activeChoices[item]).hasClass(\"incorrect\")) $(\"#\" + this.activeChoices[item]).removeClass(\"incorrect\");\n        $(\"#\" + this.activeChoices[item]).prop(\"disabled\", false);\n      }\n    },\n\n    playSound () {\n      playAudioFile2(this.octave, this.note, this.sound, this.flag);\n    }\n  },\n  mounted () {\n    let initGameSettings = initializeGame('PitchTraining');\n    this.activeChoices = initGameSettings[0];\n    this.note = initGameSettings[1];\n  },\n  filters: {\n    fixSharps: function (value) {\n      return value.replace(\"s\", \"#\");\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.score {\n  padding-top: 40px;\n  font-size: 30px;\n}\n\n.answerChoices {\n  padding-top: 30px;\n}\n\n.answerBtns {\n  margin: 2px;\n}\n\n\n\n</style>"]}]}