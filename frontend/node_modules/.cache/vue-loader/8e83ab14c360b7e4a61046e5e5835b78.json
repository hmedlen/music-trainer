{"remainingRequest":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huntermedlen/Programming/music-trainer/frontend/src/components/Exercises/ChordTraining.vue?vue&type=style&index=0&id=031210c2&scoped=true&lang=css&","dependencies":[{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/src/components/Exercises/ChordTraining.vue","mtime":1593306015231},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/huntermedlen/Programming/music-trainer/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zY29yZSB7CiAgcGFkZGluZy10b3A6IDQwcHg7CiAgZm9udC1zaXplOiAzMHB4Owp9CgouYW5zd2VyQ2hvaWNlcyB7CiAgcGFkZGluZy10b3A6IDMwcHg7CiAgZGlzcGxheTogbm9uZTsKfQoKLmFuc3dlckJ0bnMgewogIG1hcmdpbjogMnB4Owp9CgoKCg=="},{"version":3,"sources":["ChordTraining.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ChordTraining.vue","sourceRoot":"src/components/Exercises","sourcesContent":["<template>\n  <div>\n      <div class=\"score\">\n        {{ correct }} / {{ total }}\n      </div>\n      <div>\n        {{ correctRatio }}%\n      </div>\n\n      <div style=\"marginTop:60px\" />\n      <div style=\"fontSize:40px; fontWeight:700;\">\n        {{ correctAnswer | fixSharps }} \n        <!-- {{ theIndex }} -->\n      </div>\n\n      <div>\n        <v-btn fab text large id=\"incorrectBtn\">\n          Incorrect\n        </v-btn>\n        <span style=\"width:100px\">....................</span>\n        <v-btn fab text large id=\"correctBtn\">\n          Correct\n        </v-btn>\n      </div>\n\n      <!-- <v-btn\n        large\n        dark\n        @click=\"playSound\"\n      >\n        <v-icon>mdi-volume-high</v-icon>\n      </v-btn> -->\n\n\n      <div class=\"answerChoices\">\n        <v-btn fab text class=\"answerBtns\" v-for=\"item in activeChoices\" :id=\"item\" :key=\"item\" @click=\"onAnswerClick(item)\">\n          {{ item }}\n        </v-btn>\n      </div>\n  </div>\n</template>\n\n<script>\nimport Piano from '../globals/Piano'\n\nexport default {\n  components: {\n    Piano\n  },\n  data () {\n    return {\n      sound: 'Piano',\n      correctAnswer: 'C',\n      noteBig: 0,\n      octave: 3,\n      activeChoices: [],\n      flag: false,\n      correct: 0,\n      total: 0,\n      correctRatio: 0,\n      theIndex: \"i\"\n    }\n  },\n  methods: {\n    onAnswerClick (answer) {\n      if (this.flag) return;\n      console.log(\"clicked\");\n      console.log(answer);\n\n      this.total += 1;\n      // var answerConverted = noteArray2.indexOf(answer);\n      var isCorrect = processAnswer(answer);\n\n      console.log(isCorrect);\n\n      if (isCorrect) {\n        this.correct += 1;\n        untilFlag = false;\n        playCorrectAnswer();\n        // $(\"#\" + answer).addClass(\"correct\");\n        $(\"#correctBtn\").addClass(\"correct\");\n\n        // this.noteBig = convertToBigInt(answer, this.octave);\n\n        $('#pkey-' + this.noteBig).addClass(\"correct\");\n        \n        this.nextStep();\n      } else {\n        console.log(\"WRONG!\");\n        // this.correctAnswer = \"WRONG!\";\n        // this.nextStep();\n        $(\"#incorrectBtn\").addClass(\"incorrect\");\n      }\n\n      this.correctRatio = ((this.correct / this.total) * 100).toFixed(1)\n    },\n\n    nextStep () {\n      this.flag = true;\n      // for (var item in this.activeChoices) {\n      //   $(\"#\" + this.activeChoices[item]).prop(\"disabled\", true);\n      // }\n\n      let randomItem = getRandomItem(activeOptions);\n      // let theIndex =  romanNumeralsMinor((currentKeyNotes.indexOf(randomItem) + 1));\n      // let randomOctave = getRandomItem([3]);\n      // setTimeout(() => { this.correctAnswer = randomItem; correctAnswer = randomItem; this.flag = !this.flag; this.resetChoices(); this.theIndex = theIndex; }, 3000);\n      setTimeout(() => { this.correctAnswer = randomItem; correctAnswer = randomItem; this.flag = !this.flag; this.resetChoices(); }, 3000);\n      // // setTimeout(()=> { this.resetChoices(); }, 1400);\n      // setTimeout(() => { this.playSound(); this.resetChoices(); }, 1500);\n\n      // // console.log(\"??\");\n      // // setInterval(this.playSound(), 100);\n      // // setTimeout(() => { playAudioFile2(this.octave, this.note, this.sound, this.flag); this.resetChoices(); }, 1000);\n      // // TODO: change parameter of playAudioFile to an object, where it resolves the current step yknow?\n    },\n\n    resetChoices() {\n      $(\"#correctBtn\").removeClass(\"correct\");\n      $(\"#incorrectBtn\").removeClass(\"incorrect\");\n      // $('#pkey-' + this.noteBig).removeClass(\"correct\");\n      // // $('#pkey-' + this.noteBig).css(\"background\", \"transparent\");\n      // for (var item in this.activeChoices) {\n      //   if ($(\"#\" + this.activeChoices[item]).hasClass(\"correct\")) $(\"#\" + this.activeChoices[item]).removeClass(\"correct\");\n      //   if ($(\"#\" + this.activeChoices[item]).hasClass(\"incorrect\")) $(\"#\" + this.activeChoices[item]).removeClass(\"incorrect\");\n      //   $(\"#\" + this.activeChoices[item]).prop(\"disabled\", false);\n      // }\n    },\n\n    // playSound () {\n    //   playAudioFile2(this.octave, this.note, this.sound, this.flag);\n    // }\n  },\n  mounted () {\n    let initGameSettings = initializeGame('ChordTraining');\n    this.activeChoices = initGameSettings[0];\n    this.correctAnswer = initGameSettings[1];\n  },\n  filters: {\n    fixSharps: function (value) {\n      return value.replace(\"s\", \"#\");\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.score {\n  padding-top: 40px;\n  font-size: 30px;\n}\n\n.answerChoices {\n  padding-top: 30px;\n  display: none;\n}\n\n.answerBtns {\n  margin: 2px;\n}\n\n\n\n</style>"]}]}